/*
 * Device Tree for CyberTech Labs trik board
 *
 * Copyright (C) CyberTech Labs Ltd - http://www.trikset.com
 *
 * This program is free software; you can redistribute  it and/or modify it
 * under  the terms of  the GNU General  Public License as published by the
 * Free Software Foundation, version 2.
 */
/dts-v1/;
#include "da850.dtsi"
#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/input/linux-event-codes.h>

// cannot include include/linux/platform_data/gpio-davinci.h into a .dts
#define GPIO_TO_PIN(bank, gpio) (16 * (bank) + (gpio))


/ {
	compatible = "ctl,trikboard", "ti,da850";
	model = "TRIKBOARD";

	chosen {
		stdout-path = &serial1;
	};

	aliases {
		serial0 = &serial0;
		serial1 = &serial1;
		serial2 = &serial2;
		spi0 = &spi0;
		i2c1 = &i2c0;
		i2c2 = &i2c1;
	};

	memory {
		device_type = "memory";
		reg = <0xc0000000 0x08000000 0xcc000000 0x04000000>;
	};

	reserved-memory {
		#address-cells = <1>;
		#size-cells = <1>;
		ranges;

		dsp_memory_region: dsp-memory@c3000000 {
			compatible = "shared-dma-pool";
			reg = <0xc3000000 0x1000000>;
			reusable;
			status = "okay";
		};
	};

	dsp@11800000 {
		status = "okay";
	};

	soc@1c00000 {
		pmx_core: pinmux@14120 {
			status = "okay";

			mmc0_cd_pin: pinmux_mmc0_cd {
				pinctrl-single,bits = <
					/* GP4[1] */
					0x28 0x08000000 0x0f000000
				>;
			};
			mmc1_pins: pinmux_mmc1_pins {
				pinctrl-single,bits = <
					/* GP6[9], MMCSD1_CLK, MMCSD1_CMD, MMCSD1_DAT[0-3] */
					0x34 0x08000000 0x0f000000
					0x48 0x00022200 0x000fff00
					0x4C 0x00022200 0x000fff00
				>;
			};
			mcasp0_pins: pinmux_mcasp0_pins {
				pinctrl-single,bits = <
					/* * AHCLKX, AFSX, ACLKX */
					0x00 0x00101010 0x00f0f0f0
					/* AXR9 */
					0x04 0x01000000 0x0f000000
					/* AXR7 */
					0x08 0x00000001 0x0000000f
				>;
			};
			tlv320_reset_pin: pinmux_tlv320_reset_pin {
				/* GP6[15] */
				pinctrl-single,bits = <0x34 0x00000008 0x0000000f>;
			};
			nand_pins: nand_pins {
				pinctrl-single,bits = <
					/* EMA_WAIT[0], EMA_OE, EMA_WE, EMA_CS[4], EMA_CS[3] */
					0x1c 0x10110110  0xf0ff0ff0
					/*
					 * EMA_D[0], EMA_D[1], EMA_D[2],
					 * EMA_D[3], EMA_D[4], EMA_D[5],
					 * EMA_D[6], EMA_D[7]
					 */
					0x24 0x11111111  0xffffffff
					/* EMA_A[1], EMA_A[2] */
					0x30 0x01100000  0x0ff00000
				>;
			};
			spi1_cs0_pin: pinmux_spi1_cs0 {
				pinctrl-single,bits = <
					/* GP4[9] */
					0x24 0x08000000 0x0f000000
				>;
			};
			wifi_wl_en_pin: pinmux_wifi_wl_en {
				pinctrl-single,bits = <
					/* GP5[11] */
					0x2c 0x00080000 0x000f0000
				>;
			};
			bluetooth_en_pin: pinmux_bluetooth_en {
				pinctrl-single,bits = <
					/* GP6[11] */
					0x34 0x00080000 0x000f0000
				>;
			};
			button_pins: pinmux_button_pins {
				pinctrl-single,bits = <
					/* GP2[7], GP2[0] */
					0x18 0x80000008 0xf000000f
					/* GP3[13], GP3[15], GP3[12] */
					0x1C 0x00008808 0x0000ff0f
					/* GP3[4] */
					0x20 0x00008000 0x0000f000
					/* GP1[9] */
					0x08 0x04000000 0x0f000000
				>;
			};
			lcd_gpio_pins: pinmux_lcd_gpio_pins {
				pinctrl-single,bits = <
					/* LCD_BACKLIGHT */
					0x34 0x00008000 0x0000f000
					/*
					 * LCD_D[2], LCD_D[3], LCD_D[4], LCD_D[5],
					 * LCD_D[6], LCD_D[7]
					 */
					0x40 0x88888800 0xffffff00
					/*
					 * LCD_D[10], LCD_D[11], LCD_D[12], LCD_D[13],
					 * LCD_D[14], LCD_D[15], LCD_D[0], LCD_D[1]
					 */
					0x44 0x88888888 0xffffffff
					/* LCD_RESET, LCD_RD, LCD_D[8], LCD_D[9] */
					0x48 0x88000088 0xff0000ff
					/* LCD_CS, LCD_RS, LCD_WR */
					0x4c 0x08000088 0x0f0000ff
				>;
			};
			lcd_tilcdc_pins: pinmux_lcd_tilcdc_pins {
				pinctrl-single,bits = <
					/* LCD_BACKLIGHT */
					0x34 0x00008000 0x0000f000
					/*
					 * LCD_D[2], LCD_D[3], LCD_D[4], LCD_D[5],
					 * LCD_D[6], LCD_D[7]
					 */
					0x40 0x22222200 0xffffff00
					/*
					 * LCD_D[10], LCD_D[11], LCD_D[12], LCD_D[13],
					 * LCD_D[14], LCD_D[15], LCD_D[0], LCD_D[1]
					 */
					0x44 0x22222222 0xffffffff
					/* LCD_RESET, LCD_RD, LCD_D[8], LCD_D[9] */
					0x48 0x82000022 0xff0000ff
					/* LCD_CS, LCD_RS, LCD_WR */
					0x4c 0x02000022 0x0f0000ff
				>;
			};
			gyro_pins: pinmux_gyro_pins {
				pinctrl-single,bits = <
					/* INT1 (GP2[8]) and DRDY(GP2[9]) */
					0x14 0x88000000 0xff000000
				>;
			};
			accel_pins: pinmux_accel_pins {
				pinctrl-single,bits = <
					/* INT1 (GP5[3]) and INT2 (GP5[4]) */
					0x30 0x00088000 0x000ff000
				>;
			};
			pinctrl_reset_jvp1: pinmux_pinctrl_reset_jvp1 {
				pinctrl-single,bits = <
					/* GP2[1] */
					0x18 0x08000000 0x0f000000
				>;
			};
			pinctrl_reset_jvp2: pinmux_pinctrl_reset_jvp2 {
				pinctrl-single,bits = <
					/* GP6[13] */
					0x34 0x00000800 0x00000f00
				>;
			};
			poweroff_pin: pinmux_poweroff_pin {
				pinctrl-single,bits = <
					/* GP5[9] */
					0x2c 0x08000000 0x0f000000
				>;
			};
			trik_led_pins: pinmux_trik_led_pins {
				pinctrl-single,bits = <
					/* GP5[7] */
					0x30 0x00000008 0x0000000f
					/* GP5[8] */
					0x2c 0x80000000 0xf0000000
				>;
			};
			trik_jd1_pins: pinmux_trik_jd1_pins {
					pinctrl-single,bits = <
					/* GP3[2] GP3[3]*/
					0x20 0x00880000 0x00ff0000
					/* GP0[13] */
					0x00 0x00000800 0x00000f00
				>;
			};
			trik_jd2_pins: pinmux_trik_jd2_pins {
					pinctrl-single,bits = <
					/* GP3[1] GP3[5]*/
					0x20 0x08000800 0x0f000f00
					/* GP0[11] */
					0x00 0x00080000 0x000f0000
				>;
			};
			trik_jf1_pins: pinmux_trik_jf1_pins {
					pinctrl-single,bits = <
					/* GP0[8] */
					0x00 0x80000000 0xf0000000
					/* GP1[7] */
					0x10 0x00000004 0x0000000f
				>;
			};
		};
		serial0: serial@42000 {
			status = "okay";
			pinctrl-names = "default";
			pinctrl-0 = <&serial0_rxtx_pins &serial0_rtscts_pins &bluetooth_en_pin>;
			auto-flow-control;
			no-loopback-test;

			bluetooth {
				compatible = "ti,wl1271-st";
				enable-gpios = <&gpio 107 GPIO_ACTIVE_HIGH>;
				status = "okay";
			};
		};
		serial1: serial@10c000 {
			status = "okay";
		};
		serial2: serial@10d000 {
			status = "okay";
		};
		ehrpwm0: pwm@300000 {
			pinctrl-names = "default";
			pinctrl-0 = <&ehrpwm0b_pins>;
			status = "okay";
		};
		ehrpwm1: pwm@302000 {
			pinctrl-names = "default";
			pinctrl-0 = <&ehrpwm1a_pins &ehrpwm1b_pins>;
			status = "okay";
		};
		ecap0: ecap@306000 {
			pinctrl-names = "default";
			pinctrl-0 = <&ecap0_pins>;
			status = "okay";
		};
		ecap1: ecap@307000 {
			pinctrl-names = "default";
			pinctrl-0 = <&ecap1_pins>;
			status = "okay";
		};
		ecap2: ecap@308000 {
			pinctrl-names = "default";
			pinctrl-0 = <&ecap2_pins>;
			status = "okay";
		};
		rtc0: rtc@23000 {
			status = "okay";
		};
		i2c0: i2c@22000 {
			status = "okay";
			clock-frequency = <10000>;
			pinctrl-names = "default";
			pinctrl-0 = <&i2c0_pins>;
			ov7670d0: camera@21 {
				pinctrl-names = "default";
				/* jvp2 is channel 0, jvp1 is channel 1 ! */
				pinctrl-0 = <&pinctrl_reset_jvp2>;
				compatible = "ovti,ov7670";
				reg = <0x21>;
				reset-gpios = <&gpio GPIO_TO_PIN(6,13) GPIO_ACTIVE_LOW>;
				port {
					ov7670e0: endpoint {
						remote-endpoint = <&vpif_input_ch0>;
					};
				};
			};
		};
		i2c1: i2c@228000 {
			status = "okay";
			clock-frequency = <100000>;
			pinctrl-names = "default";
			pinctrl-0 = <&i2c1_pins>;

			ov7670d1: camera@21 {
				pinctrl-names = "default";
				pinctrl-0 = <&pinctrl_reset_jvp1>;
				compatible = "ovti,ov7670";
				reg = <0x21>;
				reset-gpios = <&gpio GPIO_TO_PIN(2,1) GPIO_ACTIVE_LOW>;
				port {
					ov7670e1: endpoint {
						remote-endpoint = <&vpif_input_ch1>;
					};
				};
			};

			tlv320aic3106: tlv320aic3106@18 {
				#sound-dai-cells = <0>;
				compatible = "ti,tlv320aic3106";
				reg = <0x18>;
				status = "okay";
				pinctrl-names = "default";
				pinctrl-0 = <&tlv320_reset_pin>;

				/* Regulators */
				IOVDD-supply = <&cr_3_3>;
				AVDD-supply = <&cr_3_3>;
				DRVDD-supply = <&cr_3_3>;
				DVDD-supply = <&cr_1_8>;

				ai3x-micbias-vg = <1>; /* Bias 2V */

				/* Reset pin*/
				gpio-reset = <&gpio 111 GPIO_ACTIVE_HIGH>;
			};
			mma845x: mma845x@1c {
				compatible = "fsl,mma8451";
				pinctrl-names = "default";
				pinctrl-0 = <&accel_pins>;
				reg = <0x1c>;
				interrupt-parent = <&gpio>;
				/* INT1 is connected but left unused */
				interrupts = <84 IRQ_TYPE_EDGE_FALLING>;
				interrupt-names = "INT2";
				status = "okay";
			};
			ds4420: ds4420@50 {
				compatible = "dallas,ds4420";
				reg = <0x50>;
				status = "okay";
			};
		};
		wdt: wdt@21000 {
			status = "okay";
		};
		mmc0: mmc@40000 {
			max-frequency = <50000000>;
			bus-width = <4>;
			status = "okay";
			cd-gpios = <&gpio 65 GPIO_ACTIVE_LOW>;
			pinctrl-names = "default";
			pinctrl-0 = <&mmc0_pins>, <&mmc0_cd_pin>;
		};
		mmc1: mmc@21b000 {
			max-frequency = <24000000>;
			bus-width = <4>;
			status = "okay";
			pinctrl-names = "default";
			pinctrl-0 = <&mmc1_pins>;
			non-removable;
			cap-power-off-card;
			#address-cells = <1>;
			#size-cells = <0>;
			vmmc-supply = <&wifi_vmmc>;
			wlcore: wlcore@2 {
				compatible = "ti,wl1271";
				reg = <2>;
				ref-clock-frequency = <38400000>;
				interrupt-parent = <&gpio>;
				interrupts = <105 IRQ_TYPE_EDGE_RISING>;
				status = "okay";
			};
		};
		spi0: spi@41000 {
			status = "okay";
			pinctrl-names = "default";
			pinctrl-0 = <&spi0_pins &spi0_cs0_pin>;
			flash: m25p80@0 {
				#address-cells = <1>;
				#size-cells = <1>;
				compatible = "m25p128";
				spi-max-frequency = <30000000>;
				m25p,fast-read;
				reg = <0>;
				partition@0 {
					label = "uboot";
					reg = <0x00000000 0x00080000>;
				};
				partition@1 {
					label = "uboot-env";
					reg = <0x00080000 0x00040000>;
				};
				partition@2 {
					label = "kernel";
					reg = <0x000c0000 0x00440000>;
				};
				partition@3 {
					label = "RootFS";
					reg = <0x00500000 0x00b00000>;
				};
			};
		};
		spi1: spi@30e000 {
			status = "okay";
			pinctrl-names = "default";
			pinctrl-0 = <&spi1_pins &spi1_cs0_pin>;
			cs-gpios = <&gpio 73 GPIO_ACTIVE_HIGH>;
			num-cs = <1>;
			l3gd20: l3gd20@0 {
				pinctrl-names = "default";
				pinctrl-0 = <&gyro_pins>;
				compatible = "st,l3gd20-gyro";
				spi-max-frequency = <10000000>;
				reg = <0>;
				st,drdy-int-pin = <2>;
				interrupt-parent = <&gpio>;
				interrupts = <
					41 IRQ_TYPE_EDGE_RISING /* DRDY */
					40 IRQ_TYPE_EDGE_RISING /* INT1 */
					>;
			};
		};
		mdio: mdio@224000 {
			status = "okay";
			pinctrl-names = "default";
			pinctrl-0 = <&mdio_pins>;
			bus_freq = <2200000>;
		};
		gpio: gpio@226000 {
			status = "okay";
		};
		gpio-keys {
			compatible = "gpio-keys";
			#address-cells = <1>;
			#size-cells = <0>;
			pinctrl-names = "default";
			pinctrl-0 = <&button_pins>;
			autorepeat;
			sw1 {
				label = "sw1";
				gpios = <&gpio GPIO_TO_PIN(2, 7) GPIO_ACTIVE_LOW>;
				linux,code = <KEY_POWER>;
				gpio-key;
				autorepeat;
			};
			sw2 {
				label = "sw2";
				gpios = <&gpio GPIO_TO_PIN(3, 4) GPIO_ACTIVE_LOW>;
				linux,code = <KEY_UP>;
				gpio-key;
				autorepeat;
			};
			sw3 {
				label = "sw3";
				gpios = <&gpio GPIO_TO_PIN(2, 0) GPIO_ACTIVE_LOW>;
				linux,code = <KEY_ESC>;
				gpio-key;
				autorepeat;
			};
			sw4 {
				label = "sw4";
				gpios = <&gpio GPIO_TO_PIN(1, 9) GPIO_ACTIVE_LOW>;
				linux,code = <KEY_LEFT>;
				gpio-key;
				autorepeat;
			};
			sw5 {
				label = "sw5";
				gpios = <&gpio GPIO_TO_PIN(3, 15) GPIO_ACTIVE_LOW>;
				linux,code = <KEY_RIGHT>;
				gpio-key;
				autorepeat;
			};
			sw6 {
				label = "sw6";
				gpios = <&gpio GPIO_TO_PIN(3, 13) GPIO_ACTIVE_LOW>;
				linux,code = <KEY_DOWN>;
				gpio-key;
				autorepeat;
			};
			sw7 {
				label = "sw7";
				gpios = <&gpio GPIO_TO_PIN(3, 12) GPIO_ACTIVE_LOW>;
				linux,code = <KEY_ENTER>;
				gpio-key;
				autorepeat;
			};
		};
		usb0: usb@200000 {
			dr_mode = "host";
			status = "okay";
		};
		usb1: usb@225000 {
			status = "okay";
		};
		cfgchip: chip-controller@1417c {
			usb_phy: usb-phy {
				status = "okay";
			};
		};
		display-gpio {
			compatible = "sitronix,st7789v";
			pinctrl-names = "default";
			pinctrl-0 = <&lcd_gpio_pins>;

			/* Driver hack: ACTIVE_<VAL> gpio is treated as INITIAL_<VAL> */
			reset-gpios = <&gpio 138 GPIO_ACTIVE_HIGH>;
			dc-gpios = <&gpio 136 GPIO_ACTIVE_LOW>;
			rd-gpios = <&gpio 139 GPIO_ACTIVE_HIGH>;
			wr-gpios = <&gpio 137 GPIO_ACTIVE_HIGH>;
			cs-gpios = <&gpio 96 GPIO_ACTIVE_HIGH>;
			db-gpios = <
				&gpio 120 GPIO_ACTIVE_LOW
				&gpio 121 GPIO_ACTIVE_LOW
				&gpio 122 GPIO_ACTIVE_LOW
				&gpio 123 GPIO_ACTIVE_LOW
				&gpio 124 GPIO_ACTIVE_LOW
				&gpio 125 GPIO_ACTIVE_LOW
				&gpio 126 GPIO_ACTIVE_LOW
				&gpio 127 GPIO_ACTIVE_LOW
				&gpio 112 GPIO_ACTIVE_LOW
				&gpio 113 GPIO_ACTIVE_LOW
				&gpio 114 GPIO_ACTIVE_LOW
				&gpio 115 GPIO_ACTIVE_LOW
				&gpio 116 GPIO_ACTIVE_LOW
				&gpio 117 GPIO_ACTIVE_LOW
				&gpio 118 GPIO_ACTIVE_LOW
				&gpio 119 GPIO_ACTIVE_LOW
			>;
			led-gpios = <&gpio 108 GPIO_ACTIVE_LOW>;

			buswidth = <16>;
			regwidth = <16>;
			backlight = <1>;
			status = "disabled";
		};
		display-tilcdc {
			compatible = "sitronix,st7789v-tilcdc";
			pinctrl-names = "default";
			pinctrl-0 = <&lcd_tilcdc_pins>;

			/* Driver hack: ACTIVE_<VAL> gpio is treated as INITIAL_<VAL> */
			reset-gpios = <&gpio 138 GPIO_ACTIVE_HIGH>;
			led-gpios = <&gpio 108 GPIO_ACTIVE_LOW>;

			buswidth = <16>;
			regwidth = <16>;
			backlight = <1>;
			status = "disabled";
		};
		display-tilcdc-legacy {
			compatible = "hack,ili9340";
			pinctrl-names = "default";
			pinctrl-0 = <&lcd_tilcdc_pins>;
			status = "okay";
		};
		gpio-leds {
			compatible = "gpio-leds";
			pinctrl-names = "default";
			pinctrl-0 = <&trik_led_pins>;
			led_red: led_red {
				label = "led_red";
				gpios = <&gpio GPIO_TO_PIN(5,7) GPIO_ACTIVE_HIGH>;  /* GPIO5_7 */
				default-state = "on";
			};
			led_green: led_green {
				label = "led_green";
				gpios = <&gpio GPIO_TO_PIN(5,8) GPIO_ACTIVE_HIGH>;  /* GPIO5_8 */
				default-state = "on";
			};
		};
	};
	vbat: fixedregulator0 {
		compatible = "regulator-fixed";
		regulator-name = "vbat";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		regulator-boot-on;
	};
	cr_3_3: fixedregulator-3_3 {
		compatible = "regulator-fixed";
		regulator-name = "cr_3_3";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		regulator-boot-on;
	};
	cr_1_8: fixedregulator-1_8 {
		compatible = "regulator-fixed";
		regulator-name = "cr_1_8";
		regulator-min-microvolt = <1800000>;
		regulator-max-microvolt = <1800000>;
		regulator-boot-on;
	};
	wifi_vmmc: fixedregulator-wifi_wl_en {
		compatible = "regulator-fixed";
		regulator-name = "wifi_wl_en_reg";
		regulator-min-microvolt = <1800000>;
		regulator-max-microvolt = <1800000>;
		startup-delay-us = <70000>;
		pinctrl-names = "default";
		pinctrl-0 = <&wifi_wl_en_pin>;
		gpio = <&gpio 91 GPIO_ACTIVE_HIGH>;
		enable-active-high;
	};

	gpio-poweroff {
		compatible = "gpio-poweroff";
		pinctrl-names = "default";
		pinctrl-0 = <&poweroff_pin>;
		gpios = <&gpio 89 GPIO_ACTIVE_LOW>;
	};

	sound {
		compatible = "simple-audio-card";
		simple-audio-card,name = "DA850/OMAP-L138 TRIK";
		simple-audio-card,widgets =
			"Microphone", "Stereo Mic",
			"Line", "Speaker",
			"Headphone", "Headphone Jack";
		simple-audio-card,routing =
			"LINE2L", "Stereo Mic",
			"LINE2R", "Stereo Mic",
			"Stereo Mic", "Mic Bias",
			"Speaker", "LLOUT",
			"Headphone Jack", "HPROUT",
			"Headphone Jack", "HPLOUT";
		simple-audio-card,format = "dsp_b";
		simple-audio-card,bitclock-master = <&link0_codec>;
		simple-audio-card,frame-master = <&link0_codec>;
		simple-audio-card,bitclock-inversion;

		simple-audio-card,cpu {
			sound-dai = <&mcasp0>;
			system-clock-frequency = <24000000>;
		};

		link0_codec: simple-audio-card,codec {
			sound-dai = <&tlv320aic3106>;
			system-clock-frequency = <24000000>;
		};
	};
	trik_jd1 {
		compatible = "trik,jd1";
		pinctrl-names = "default";
		pinctrl-0 = <&trik_jd1_pins>;
		gpio-d1a = <&gpio GPIO_TO_PIN(3,3) GPIO_ACTIVE_HIGH>;
		gpio-d1b = <&gpio GPIO_TO_PIN(3,2) GPIO_ACTIVE_HIGH>;
		gpio-d1e = <&gpio GPIO_TO_PIN(0,13) GPIO_ACTIVE_LOW>;
	};
	trik_jd2 {
		compatible = "trik,jd2";
		pinctrl-names = "default";
		pinctrl-0 = <&trik_jd2_pins>;
		gpio-d1a = <&gpio GPIO_TO_PIN(3,1) GPIO_ACTIVE_HIGH>;
		gpio-d1b = <&gpio GPIO_TO_PIN(3,5) GPIO_ACTIVE_HIGH>;
		gpio-d1e = <&gpio GPIO_TO_PIN(0,11) GPIO_ACTIVE_LOW>;
	};
	trik_jf1 {
		compatible = "trik,jf1";
		pinctrl-names = "default";
		pinctrl-0 = <&trik_jf1_pins>;
		gpio-d1a = <&gpio GPIO_TO_PIN(0,8) GPIO_ACTIVE_HIGH>;
		gpio-d1b = <&gpio GPIO_TO_PIN(1,7) GPIO_ACTIVE_HIGH>;
	};
};

&mcasp0 {
	#sound-dai-cells = <0>;
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&mcasp0_pins>;

	op-mode = <0>;          /* MCASP_IIS_MODE */
	tdm-slots = <2>;
	/* 4 serializer */
	serial-dir = <  /* 0: INACTIVE, 1: TX, 2: RX */
		0 0 0 0
		0 0 0 1
		0 2 0 0
		0 0 0 0
	>;
	tx-num-evt = <1>;
	rx-num-evt = <1>;
};

&edma0 {
	ti,edma-reserved-slot-ranges = <32 50>;
};

&edma1 {
	ti,edma-reserved-slot-ranges = <32 90>;
};

&vpif {
	compatible = "ti,da850-vpif";
	reg = <0x217000 0x1000>;
	interrupts = <92>;
	pinctrl-names = "default";
	pinctrl-0 = <&vpif_capture_pins>;
	status = "okay";

	ports {
		#address-cells = <1>;
		#size-cells = <0>;

		port@0 {
			#address-cells = <1>;
			#size-cells = <0>;
			reg = <0>;
			vpif_input_ch0: endpoint@0 {
				reg = <0>;
				bus-width = <8>;
				remote-endpoint = <&ov7670e0>;
			};
		};

		port@1 {
			#address-cells = <1>;
			#size-cells = <0>;
			reg = <1>;
			vpif_input_ch1: endpoint@0 {
				reg = <0>;
				bus-width = <8>;
				data-shift = <8>;
				remote-endpoint = <&ov7670e1>;
			};
		};
	};
};
